build:
  box: golang
  steps:
    - setup-go-workspace

    # Add ssh key in order to download private reps
    - add-ssh-key:
        keyname: github
    - add-to-known_hosts:
        hostname: github.com
    - glide-install


    # Tests
    - almogbaku/glide-test
    - golint:
        exclude: "vendor"
    - almogbaku/gofmt-check

    # Build the project
    - script:
        name: go build
        code: |
          CGO_ENABLED=0 GOOS=linux go build -ldflags "-s -w -X main.Version=$WERCKER_GIT_COMMIT -X main.BuildDate=$(date -u '+%Y-%m-%d_%I:%M:%S%p')" -a -installsuffix nocgo -o nsqd-discovery .

    - script:
        name:
        code: |
            cp nsqd-discovery "$WERCKER_OUTPUT_DIR"


deploy:
    box: golang
    steps:
         # Use the scratch step to build a container from scratch based on the files present
        - internal/docker-scratch-push:
            username: _json_key
            password: $GCR_JSON_KEY_FILE
            repository: gcr.io/$GCE_PROJECT_ID/$WERCKER_GIT_REPOSITORY
            registry: https://gcr.io/v2
            entrypoint: ./nsqd-discovery
            tag: $WERCKER_GIT_COMMIT, latest
            user: "2016"

        - create-file:
            name: Create ca.pem
            filename: ca.pem
            content: $CA_PEM

        - kubectl:
            server: $KUBERNETES_MASTER
            certificate-authority: ca.pem
            token: $WERCKER_SA_TOKEN
            command: set image deployment/$WERCKER_GIT_REPOSITORY $WERCKER_GIT_REPOSITORY=gcr.io/$GCE_PROJECT_ID/$WERCKER_GIT_REPOSITORY:$WERCKER_GIT_COMMIT

    after-steps:
      - slack-notifier:
          url: $SLACK_URL
          channel: r_n_d
          username: werckerbot